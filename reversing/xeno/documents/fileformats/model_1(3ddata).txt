model header
+0 [][][][] number of parts
+4 [][][][] flags
                0x00000002: if not set then set and init something.



parts header
+00 [][]     init flags
             0x0001 - memory +18 (for polygon normals for lighting) allocated.
             0x0002 - polygon normals for lighting are calculated and stored.
+02 [][]     number of vertexes
+04 [][]     number of polygons
+06 [][]     number of polygons blocks
+08 [][][][] offset to vertex block
+0c [][][][] some offset
+10 [][][][] offset to mesh block.
+14 [][][][] offset to texture coords block.
+18 [][][][] we store here pointer to allocated memory for normals for polygons lighting with +30 size if +00 & 1 not set.
+1c [][][][] some offset (if exist).
+24 [][][][] 
+30 [][][][] memory size for polygon normals for lighting.
+34 [][][][] allocate twice as much place. Maybe size of all packets (twice because threre are 2 frames one to display and one to render).



polygons data (+10 sub file format)
format is header, data, header, data ...
header
+0 []       polygons type id.
+1 []
+2 [][]     number of polygons.
data



UV data (+14 sub file format)(size 0x4)
+0 [][]     data.
+3 []       type of data (0xc4 - texture page settings, 0xc8 - CLUT settings).
or
+0 [][]     texture UV for vertex 3.
+3 []       packet control byte.
+4 [][]     texture UV for vertex 1.
+6 [][]     texture UV for vertex 2.



+1c sub file format
+00 [][][][] number of records in subfile

+00 [][][][] ???
+04 [][][][] some offset
+08 [][][][] some offset