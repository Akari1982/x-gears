////////////////////////////////
// AKAO_opcode_a1
A3 = A0; // pointer to channel struct 0x108
V0 = w[A3 + 0];
T0 = bu[V0 + 0];
[A3 + 0] = w(V0 + 1);

A0 = hu[A3 + 24];

if (w[80062f04] != 0)
{
    A0 = A0 - 18;
}

if (w[A3 + 38] & 00000100)
{
    [A1 + 24] = w(w[A1 + 24] & (0 NOR (1 << A0)))
    [A3 + 38] = w(w[A3 + 38] & fffffeff)
}

if (hu[A3 + 54] != 0 || (A2 & w[A1 + c] & w[80099fcc]) == 0)
{
    [A3 + e0] = w(w[A3 + e0] | 00000010);
    [A3 + 30] = w((w[A3 + 30] * w[80075f28 + T0 * 40 + 10]) / w[80075f28 + hu[A3 + 58] * 40 + 10]);
}

// if loaded adsr release rate, load rest
// note from G
if (w[A3 + 38] & 00000200)
{
    // set instrument id
    [A3 + 58] = h(T0);

    // init pitch attack and other values from instrument data
    [A3 + e4] = w(w[80075f28 + T0 * 40 + 0]);
    [A3 + e8] = w(w[80075f28 + T0 * 40 + 4]);
    [A3 + fa] = h(bu[80075f28 + T0 * 40 + 8]);
    [A3 + fc] = h(bu[80075f28 + T0 * 40 + 9]);
    [A3 + fe] = h(bu[80075f28 + T0 * 40 + a]);
    [A3 + 100] = h(bu[80075f28 + T0 * 40 + b]);
    [A3 + ec] = h(bu[80075f28 + T0 * 40 + d]);
    [A3 + f0] = h(bu[80075f28 + T0 * 40 + e]);

    // set update this values to spu
    [A3 + e0] = w(w[A3 + e0] | 0001bb80);
}
// init all data
else
{
    A0 = A3;
    A1 = T0;
    func31820;
}
////////////////////////////////



////////////////////////////////
// AKAO_opcode_a3
V1 = w[A0 + 0];
[A0 + 0] = w(V0 + 1);

[A0 + e0] = w(w[A0 + e0] | 00000003);
[A0 + 2c] = w(bu[V1 + 0]);
////////////////////////////////



////////////////////////////////
// AKAO_opcode_a5
V0 = w[A0 + 0];
[A0 + 0] = w(V0 + 1);

[A0 + 66] = h(bu[V0]);
////////////////////////////////



////////////////////////////////
// AKAO_opcode_a8
V0 = w[A0 + 0];
[A0 + 0] = w(V0 + 1);

[A0 + e0] = w(w[A0 + e0] | 00000003);
[A0 + 5c] = h(0);
[A0 + 44] = w(bu[V1 + 0] << 17);
////////////////////////////////



////////////////////////////////
// AKAO_opcode_a9
V0 = w[A0 + 0];
[A0 + 0] = w(V0 + 2);

[A0 + 5c] = h(bu[V0 + 0]);

if (V0 == 0)
{
    [A0 + 5c] = h(100);
}

[A0 + 44] = w(w[A0 + 44] & ffff0000);
[A0 + 48] = w(((b[V1 + 1] << 17) - w[A0 + 44]) / hu[A0 + 5c]);
////////////////////////////////



////////////////////////////////
// AKAO_opcode_aa
V0 = w[A0 + 0];
[A0 + 0] = w(V0 + 1);

[A0 + e0] = w(w[A0 + e0] | 00000003);
[A0 + 60] = h(bu[V0] << 8);
[A0 + 62] = h(0);
////////////////////////////////



////////////////////////////////
// AKAO_opcode_b4
A1 = A0;
V0 = w[A1 + 38]
8003261C	lhu    v1, $0054(a1)
80032620	ori    v0, v0, $0001
80032624	beq    v1, zero, L32654 [$80032654]
80032628	sw     v0, $0038(a1)
8003262C	lw     v1, $0000(a1)
80032630	sh     zero, $0072(a1)
80032634	addiu  v0, v1, $0001
80032638	sw     v0, $0000(a1)
8003263C	lbu    v0, $0000(v1)
80032640	nop
80032644	beq    v0, zero, L32670 [$80032670]
80032648	sll    v0, v0, $08
8003264C	j      L32670 [$80032670]
80032650	sh     v0, $007e(a1)

L32654:	; 80032654
80032654	lw     v0, $0000(a1)
80032658	nop
8003265C	addiu  v1, v0, $0001
80032660	sw     v1, $0000(a1)
80032664	lbu    v0, $0000(v0)
80032668	nop
8003266C	sh     v0, $0072(a1)

L32670:	; 80032670
80032670	lw     v0, $0000(a1)
80032674	nop
80032678	addiu  v1, v0, $0001
8003267C	sw     v1, $0000(a1)
80032680	lbu    v0, $0000(v0)
80032684	nop
80032688	bne    v0, zero, L32698 [$80032698]
8003268C	sh     v0, $0076(a1)
80032690	ori    v0, zero, $0100
80032694	sh     v0, $0076(a1)

L32698:	; 80032698
80032698	lw     v1, $0000(a1)
8003269C	lhu    a0, $0030(a1)
800326A0	addiu  v0, v1, $0001
800326A4	sw     v0, $0000(a1)
800326A8	lbu    v0, $0000(v1)
800326AC	lhu    v1, $007e(a1)
800326B0	sh     v0, $007a(a1)
800326B4	andi   v0, v1, $7f00
800326B8	andi   v1, v1, $8000
800326BC	beq    v1, zero, L326cc [$800326cc]
800326C0	srl    a2, v0, $08
800326C4	j      L326dc [$800326dc]
800326C8	mult   a2, a0

L326cc:	; 800326CC
800326CC	sll    v0, a0, $04
800326D0	subu   v0, v0, a0
800326D4	sra    v0, v0, $08
800326D8	mult   a2, v0

L326dc:	; 800326DC
800326DC	mflo   v0
800326E0	sra    v1, v0, $07
800326E4	lhu    v0, $007a(a1)
800326E8	sh     v1, $007c(a1)
800326EC	lhu    v1, $0072(a1)
800326F0	sll    v0, v0, $02
800326F4	lui    at, $8005
800326F8	addiu  at, at, $a5cc (=-$5a34)
800326FC	addu   at, at, v0
80032700	lw     a0, $0000(at)
80032704	ori    v0, zero, $0001
80032708	sh     v1, $0074(a1)
8003270C	sh     v0, $0078(a1)
80032714	sw     a0, $0018(a1)
////////////////////////////////



////////////////////////////////
// AKAO_opcode_c2
V0 = hu[A0 + 54];
if (V0 == 0)
{
    [A1 + 30] = w(w[A1 + 30] | A2);
}
else
{
    [80099ff0] = w(w[80099ff0] | A2);
}

func30038;
////////////////////////////////



////////////////////////////////
// AKAO_opcode_e8
// set tempo
V1 = w[A0 + 0];
[A0 + 0] = w(V1 + 2);

[A1 + 18] = w((bu[V1 + 1] << 18) | (bu[V1 + 0] << 10));
[A1 + 48] = h(0);
////////////////////////////////



////////////////////////////////
// AKAO_opcode_ea
V1 = w[A0 + 0];
[A0 + 0] = w(V1 + 2);

[A1 + 38] = w(w[A1 + 38] | 00000080);
[A1 + 40] = w((bu[V1 + 1 << 18) | (bu[V1 + 0] << 10));
[A1 + 50] = h(0);
////////////////////////////////



////////////////////////////////
// AKAO_opcode_fd
V1 = w[A0];
[A0] = w(V1 + 2);

[A1 + 56] = h(bu[V1 + 1]);
[A1 + 58] = h(0);
[A1 + 5a] = h(bu[V1 + 0]);
[A1 + 5c] = h(0);
////////////////////////////////



////////////////////////////////
// AKAO_opcode_fe
V1 = w[A0];
[A0] = w(V1 + 2);

[A1 + 5e] = h(bu[V1 + 1] << 8 | bu[V1 + 0]);
////////////////////////////////