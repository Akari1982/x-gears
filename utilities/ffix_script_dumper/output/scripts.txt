ENTITY: entity_id = 0x00
SCRIPT: script_id = 0x00
0x00f2    JumpIf( Unimplemented type 0x1a for stack opcode 0x7a. == false )To( 0x0128 ); // 05 7a 1a 7f 02 2f 00
0x00f9    JumpIf( ( bu[ 0x8007aef0 + 0x00c7 ] & 0x00000002 ) == false )To( 0x0120 ); // 05 d4 c7 7d 02 00 24 7f 02 1c 00
0x0104    0xec( 0x02, 0x01, 0x00, 0x00, 0x00, 0x00 ); // ec 00 02 01 00 00 00 00
0x010c    Wait( 0x01 ); // 22 00 01
0x010f    WindowSync( window_id = 0x00, style = 0x00, text_id = 0x0013 ); // 1f 00 00 00 13 00
0x0115    0xec( 0x02, 0x01, 0x00, 0xff, 0xff, 0xff ); // ec 00 02 01 00 ff ff ff
0x011d    Wait( 0x01 ); // 22 00 01
0x0120    MISSING OPCODE 0xeb

SCRIPT: script_id = 0x01
0x0132    JumpIf( ( bu[ w[ 0x8007bcf8 ] + 0x0001 ] == false ) == false )To( 0x01a3 ); // 05 d6 01 0e 7f 02 69 00
0x013a    ( bu[ w[ 0x8007bcf8 ] + 0x0001 ]++ ); // 05 d6 01 04 7f
0x013f    JumpTo( 0x014c ); // 01 0a 00
0x0142    Wait( 0x01 ); // 22 00 01
0x0145    [ 0x8007aef0 + 0x00ce ] = b( GetRandomByte() ); // 05 d4 ce 7a 00 2c 7f
0x014c    JumpIf( ( ( Unimplemented type 0x28 for stack opcode 0x7a. & 0x00000008 ) == false ) == true )To( 0x0142 ); // 05 7a 28 7d 08 00 24 0e 7f 03 ea ff
0x0158    CountActiveBits( [ w[ 0x8007bcf8 ] + 0x0002 ] = h( MultipleEqual( mask = GetEnemyMask(), parameter = Unimplemented 0x18 with type 0x46 load., value = 0x00000000 ) ) ); // 05 de 02 79 03 29 46 7d 00 00 22 2c 2a 7f
0x0166    CountActiveBits( [ w[ 0x8007bcf8 ] + 0x0004 ] = h( MultipleEqual( mask = GetEnemyMask(), parameter = Unimplemented 0x18 with type 0x46 load., value = 0x00000001 ) ) ); // 05 de 04 79 03 29 46 7d 01 00 22 2c 2a 7f
0x0174    CountActiveBits( [ w[ 0x8007bcf8 ] + 0x0006 ] = h( MultipleEqual( mask = GetEnemyMask(), parameter = Unimplemented 0x18 with type 0x46 load., value = 0x00000002 ) ) ); // 05 de 06 79 03 29 46 7d 02 00 22 2c 2a 7f
0x0182    [ w[ 0x8007bcf8 ] + 0x0008 ] = b( 0x00000001 ); // 05 d6 08 7d 01 00 2c 7f
0x018a    JumpTo( 0x0197 ); // 01 0a 00
0x018d    Wait( 0x01 ); // 22 00 01
0x0190    [ 0x8007aef0 + 0x00ce ] = b( GetRandomByte() ); // 05 d4 ce 7a 00 2c 7f
0x0197    JumpIf( ( ( Unimplemented type 0x28 for stack opcode 0x7a. & 0x00000010 ) == false ) == true )To( 0x018d ); // 05 7a 28 7d 10 00 24 0e 7f 03 ea ff
0x01a3    JumpIf( ( ( bu[ 0x8007aef0 + 0x00c7 ] & 0x00000002 ) == false ) == false )To( 0x01c5 ); // 05 d4 c7 7d 02 00 24 0e 7f 02 16 00
0x01af    JumpIf( CountActiveBits( MultipleAnd( mask = GetPartyMask(), parameter = Unimplemented 0x18 with type 0x2f load., value = 0x00000200 ) ) == false )To( 0x01c5 ); // 05 79 02 29 2f 7d 00 02 54 2a 7f 02 08 00
0x01bd    ( bu[ 0x8007aef0 + 0x00c7 ] |= 0x00000002 ); // 05 d4 c7 7d 02 00 3f 7f
0x01c5    JumpIf( ( Unimplemented type 0x1e for stack opcode 0x7a. == 0x00000007 ) == false )To( 0x0218 ); // 05 7a 1e 7d 07 00 20 7f 02 48 00
0x01d0    JumpIf( ( bu[ w[ 0x8007bcf8 ] + 0x0000 ] == false ) == false )To( 0x0218 ); // 05 d6 00 0e 7f 02 40 00
0x01d8    ( bu[ w[ 0x8007bcf8 ] + 0x0000 ]++ ); // 05 d6 00 04 7f
0x01dd    JumpTo( 0x01e3 ); // 01 03 00
0x01e0    Wait( 0x01 ); // 22 00 01
0x01e3    JumpIf( ( Unimplemented type 0x19 for stack opcode 0x7a. != 0x00000000 ) == true )To( 0x01e0 ); // 05 7a 19 7d 00 00 21 7f 03 f2 ff
0x01ee    JumpIf( ( Unimplemented type 0x1e for stack opcode 0x7a. != 0x00000004 ) == false )To( 0x01fa ); // 05 7a 1e 7d 04 00 21 7f 02 01 00
0x01f9    Return(); // 04
0x01fa    MISSING OPCODE 0x4a




ENTITY: entity_id = 0x01
SCRIPT: script_id = 0x00
0x02fa    [ w[ 0x8007bcf8 ] + 0x0015 ] = b( 0x00000003 ); // 05 d6 15 7d 03 00 2c 7f
0x0302    [ w[ 0x8007bcf8 ] + 0x0002 ] = b3( 0x00002040 ); // 05 ca 02 7d 40 20 2c 7f
0x030a    [ w[ 0x8007bcf8 ] + 0x0005 ] = b3( 0x00000000 ); // 05 ca 05 7d 00 00 2c 7f
0x0312    [ w[ 0x8007bcf8 ] + 0x0008 ] = b3( 0x00000000 ); // 05 ca 08 7d 00 00 2c 7f
0x031a    [ w[ 0x8007bcf8 ] + 0x000b ] = b3( 0x00000000 ); // 05 ca 0b 7d 00 00 2c 7f
0x0322    [ w[ 0x8007bcf8 ] + 0x0016 ] = b( 0x00000000 ); // 05 d2 16 7d 00 00 2c 7f
0x032a    JumpTo( 0x0340 ); // 01 13 00
0x032d    ( b3[ w[ 0x8007bcf8 ] + 0x0017 ] |= ( b[ w[ 0x8007bcf8 ] + 0x0016 ] << ( 0x00000003 * b[ w[ 0x8007bcf8 ] + 0x0016 ] ) ) ); // 05 ca 17 d2 16 d2 16 7d 03 00 11 16 3f 7f
0x033b    ( b[ w[ 0x8007bcf8 ] + 0x0016 ]++ ); // 05 d2 16 04 7f
0x0340    JumpIf( ( b[ w[ 0x8007bcf8 ] + 0x0016 ] < bu[ w[ 0x8007bcf8 ] + 0x0015 ] ) == true )To( 0x032d ); // 05 d2 16 d6 15 18 7f 03 e3 ff
0x034a    [ w[ 0x8007bcf8 ] + 0x0016 ] = b( bu[ w[ 0x8007bcf8 ] + 0x0015 ] ); // 05 d2 16 d6 15 2c 7f
0x0351    JumpTo( 0x03ca ); // 01 76 00
0x0354    [ w[ 0x8007bcf8 ] + 0x001a ] = b3( ( b[ w[ 0x8007bcf8 ] + 0x0016 ] % GetRandomByte() ) ); // 05 ca 1a 7a 00 d2 16 13 2c 7f
0x035e    [ w[ 0x8007bcf8 ] + 0x001d ] = b3( ( 0x00000007 << ( 0x00000003 * b3[ w[ 0x8007bcf8 ] + 0x001a ] ) ) ); // 05 ca 1d 7d 07 00 ca 1a 7d 03 00 11 16 2c 7f
0x036d    ( b3[ w[ 0x8007bcf8 ] + 0x001d ] &= b3[ w[ 0x8007bcf8 ] + 0x0017 ] ); // 05 ca 1d ca 17 3d 7f
0x0374    ( b3[ w[ 0x8007bcf8 ] + 0x000e ] |= ( b3[ w[ 0x8007bcf8 ] + 0x001d ] << ( 0x00000003 * ( 0x00000001 - ( b3[ w[ 0x8007bcf8 ] + 0x001a ] - b[ w[ 0x8007bcf8 ] + 0x0016 ] ) ) ) ) ); // 05 ca 0e ca 1d d2 16 ca 1a 15 7d 01 00 15 7d 03 00 11 16 3f 7f
0x0389    [ w[ 0x8007bcf8 ] + 0x001a ] = b3( ( 0x00000001 - ( 0x00000001 << ( 0x00000003 * b3[ w[ 0x8007bcf8 ] + 0x001a ] ) ) ) ); // 05 ca 1a 7d 01 00 ca 1a 7d 03 00 11 16 7d 01 00 15 2c 7f
0x039c    [ w[ 0x8007bcf8 ] + 0x001d ] = b3( ( b3[ w[ 0x8007bcf8 ] + 0x001a ] & b3[ w[ 0x8007bcf8 ] + 0x0017 ] ) ); // 05 ca 1d ca 1a ca 17 24 2c 7f
0x03a6    ( b3[ w[ 0x8007bcf8 ] + 0x001a ] ^= 0x00ffffff ); // 05 ca 1a 7e ff ff ff 00 3e 7f
0x03b0    [ w[ 0x8007bcf8 ] + 0x0017 ] = b3( ( ( b3[ w[ 0x8007bcf8 ] + 0x0017 ] >> 0x00000003 ) & b3[ w[ 0x8007bcf8 ] + 0x001a ] ) ); // 05 ca 17 ca 17 7d 03 00 17 ca 1a 24 2c 7f
0x03be    ( b3[ w[ 0x8007bcf8 ] + 0x0017 ] |= b3[ w[ 0x8007bcf8 ] + 0x001d ] ); // 05 ca 17 ca 1d 3f 7f
0x03c5    ( b[ w[ 0x8007bcf8 ] + 0x0016 ]-- ); // 05 d2 16 05 7f
0x03ca    JumpIf( ( b[ w[ 0x8007bcf8 ] + 0x0016 ] > 0x00000001 ) == true )To( 0x0354 ); // 05 d2 16 7d 01 00 19 7f 03 7f ff
0x03d5    ( b3[ w[ 0x8007bcf8 ] + 0x000e ] |= ( b3[ w[ 0x8007bcf8 ] + 0x0017 ] & 0x00000007 ) ); // 05 ca 0e ca 17 7d 07 00 24 3f 7f
0x03e0    Return(); // 04

SCRIPT: script_id = 0x01
0x03e1    JumpIf( ( bu[ w[ 0x8007bcf8 ] + 0x0001 ] == false ) == false )To( 0x041f ); // 05 d6 01 0e 7f 02 36 00
0x03e9    [ w[ 0x8007bcf8 ] + 0x0001 ] = b( 0x00000001 ); // 05 d6 01 7d 01 00 2c 7f
0x03f1    JumpTo( 0x03fe ); // 01 0a 00
0x03f4    Wait( 0x01 ); // 22 00 01
0x03f7    [ 0x8007aef0 + 0x00ce ] = b( GetRandomByte() ); // 05 d4 ce 7a 00 2c 7f
0x03fe    JumpIf( ( Unimplemented type 0x1e for stack opcode 0x7a. != 0x00000001 ) == true )To( 0x03f4 ); // 05 7a 1e 7d 01 00 21 7f 03 eb ff
0x0409    MISSING OPCODE 0x4a

SCRIPT: script_id = 0x05
0x0458    [ w[ 0x8007bcf8 ] + 0x0011 ] = b3( ( b3[ w[ 0x8007bcf8 ] + 0x000e ] & 0x00000007 ) ); // 05 ca 11 ca 0e 7d 07 00 24 2c 7f
0x0463    [ w[ 0x8007bcf8 ] + 0x001a ] = b3( GetRandomByte() ); // 05 ca 1a 7a 00 2c 7f
0x046a    [ w[ 0x8007bcf8 ] + 0x001d ] = b3( 0x00000080 ); // 05 ca 1d 7d 80 00 2c 7f
0x0472    [ w[ 0x8007bcf8 ] + 0x0016 ] = b( ( 0x00000001 - bu[ w[ 0x8007bcf8 ] + 0x0015 ] ) ); // 05 d2 16 d6 15 7d 01 00 15 2c 7f
0x047d    JumpTo( 0x049a ); // 01 1a 00
0x0480    JumpIf( ( b3[ w[ 0x8007bcf8 ] + 0x001a ] > b3[ w[ 0x8007bcf8 ] + 0x001d ] ) == false )To( 0x048d ); // 05 ca 1a ca 1d 19 7f 02 03 00
0x048a    JumpTo( 0x04a5 ); // 01 18 00
0x048d    ( b3[ w[ 0x8007bcf8 ] + 0x001d ] >>= 0x00000001 ); // 05 ca 1d 7d 01 00 35 7f
0x0495    ( b[ w[ 0x8007bcf8 ] + 0x0016 ]-- ); // 05 d2 16 05 7f
0x049a    JumpIf( ( b[ w[ 0x8007bcf8 ] + 0x0016 ] >= 0x00000000 ) == true )To( 0x0480 ); // 05 d2 16 7d 00 00 1b 7f 03 db ff
0x04a5    JumpIf( ( b[ w[ 0x8007bcf8 ] + 0x0016 ] == 0x0000ffff ) == false )To( 0x04bb ); // 05 d2 16 7d ff ff 20 7f 02 0b 00
0x04b0    [ w[ 0x8007bcf8 ] + 0x0016 ] = b( ( 0x00000001 - bu[ w[ 0x8007bcf8 ] + 0x0015 ] ) ); // 05 d2 16 d6 15 7d 01 00 15 2c 7f
0x04bb    JumpIf( ( b[ w[ 0x8007bcf8 ] + 0x0016 ] == ( 0x00000001 - bu[ w[ 0x8007bcf8 ] + 0x0015 ] ) ) == false )To( 0x04eb ); // 05 d2 16 d6 15 7d 01 00 15 20 7f 02 22 00
0x04c9    [ w[ 0x8007bcf8 ] + 0x000e ] = b3( ( ( b3[ w[ 0x8007bcf8 ] + 0x000e ] >> 0x00000003 ) & 0x001fffff ) ); // 05 ca 0e ca 0e 7d 03 00 17 7e ff ff 1f 00 24 2c 7f
0x04da    ( b3[ w[ 0x8007bcf8 ] + 0x000e ] |= ( b3[ w[ 0x8007bcf8 ] + 0x0011 ] << ( 0x00000003 * b[ w[ 0x8007bcf8 ] + 0x0016 ] ) ) ); // 05 ca 0e ca 11 d2 16 7d 03 00 11 16 3f 7f
0x04e8    JumpTo( 0x0544 ); // 01 59 00
0x04eb    JumpIf( b[ w[ 0x8007bcf8 ] + 0x0016 ] == false )To( 0x0544 ); // 05 d2 16 7f 02 52 00
0x04f2    [ w[ 0x8007bcf8 ] + 0x0017 ] = b3( ( b3[ w[ 0x8007bcf8 ] + 0x0011 ] << ( 0x00000003 * b[ w[ 0x8007bcf8 ] + 0x0016 ] ) ) ); // 05 ca 17 ca 11 d2 16 7d 03 00 11 16 2c 7f
0x0500    [ w[ 0x8007bcf8 ] + 0x001a ] = b3( ( 0x00000001 - ( 0x00000001 << ( 0x00000003 * ( 0x00000001 + b[ w[ 0x8007bcf8 ] + 0x0016 ] ) ) ) ) ); // 05 ca 1a 7d 01 00 d2 16 7d 01 00 14 7d 03 00 11 16 7d 01 00 15 2c 7f
0x0517    [ w[ 0x8007bcf8 ] + 0x001d ] = b3( ( ( b3[ w[ 0x8007bcf8 ] + 0x001a ] & b3[ w[ 0x8007bcf8 ] + 0x000e ] ) >> 0x00000003 ) ); // 05 ca 1d ca 1a ca 0e 24 7d 03 00 17 2c 7f
0x0525    ( b3[ w[ 0x8007bcf8 ] + 0x001d ] |= b3[ w[ 0x8007bcf8 ] + 0x0017 ] ); // 05 ca 1d ca 17 3f 7f
0x052c    ( b3[ w[ 0x8007bcf8 ] + 0x001a ] ^= 0x00ffffff ); // 05 ca 1a 7e ff ff ff 00 3e 7f
0x0536    ( b3[ w[ 0x8007bcf8 ] + 0x000e ] &= b3[ w[ 0x8007bcf8 ] + 0x001a ] ); // 05 ca 0e ca 1a 3d 7f
0x053d    ( b3[ w[ 0x8007bcf8 ] + 0x000e ] |= b3[ w[ 0x8007bcf8 ] + 0x001d ] ); // 05 ca 0e ca 1d 3f 7f
0x0544    [ w[ 0x8007bcf8 ] + 0x0016 ] = b( bu[ w[ 0x8007bcf8 ] + 0x0015 ] ); // 05 d2 16 d6 15 2c 7f
0x054b    JumpTo( 0x0659 ); // 01 0b 01
0x054e    JumpSwitch( b3[ w[ 0x8007bcf8 ] + 0x0011 ] )( case 0x0000: jump_to:0x0568)( case 0x0001: jump_to:0x0574)( case 0x0002: jump_to:0x0580)( case 0x0003: jump_to:0x058c)( case 0x0004: jump_to:0x0597)( case 0x0005: jump_to:0x05a2)( case 0x0006: jump_to:0x05ad)( case 0x0007: jump_to:0x05b8)( default: jump_to:0x05c0); // 05 ca 11 7f 0b 08 00 00 6d 00 15 00 21 00 2d 00 39 00 44 00 4f 00 5a 00 65 00
0x0568    CountActiveBits( [ masks + 0x00 ] = h( PickRandomActiveBit( GetPartyMask() ) ) ); // 05 79 00 79 02 4d 2c 2a 7f
0x0571    JumpTo( 0x05c0 ); // 01 4c 00
0x0574    CountActiveBits( [ masks + 0x00 ] = h( PickRandomActiveBit( GetPartyMask() ) ) ); // 05 79 00 79 02 4d 2c 2a 7f
0x057d    JumpTo( 0x05c0 ); // 01 40 00
0x0580    CountActiveBits( [ masks + 0x00 ] = h( PickRandomActiveBit( GetPartyMask() ) ) ); // 05 79 00 79 02 4d 2c 2a 7f
0x0589    JumpTo( 0x05c0 ); // 01 34 00
0x058c    CountActiveBits( [ masks + 0x00 ] = h( GetUnknown01Mask() ) ); // 05 79 00 79 01 2c 2a 7f
0x0594    JumpTo( 0x05c0 ); // 01 29 00
0x0597    CountActiveBits( [ masks + 0x00 ] = h( GetUnknown01Mask() ) ); // 05 79 00 79 01 2c 2a 7f
0x059f    JumpTo( 0x05c0 ); // 01 1e 00
0x05a2    CountActiveBits( [ masks + 0x00 ] = h( GetUnknown01Mask() ) ); // 05 79 00 79 01 2c 2a 7f
0x05aa    JumpTo( 0x05c0 ); // 01 13 00
0x05ad    CountActiveBits( [ masks + 0x00 ] = h( GetUnknown01Mask() ) ); // 05 79 00 79 01 2c 2a 7f
0x05b5    JumpTo( 0x05c0 ); // 01 08 00
0x05b8    CountActiveBits( [ masks + 0x00 ] = h( GetUnknown01Mask() ) ); // 05 79 00 79 01 2c 2a 7f
0x05c0    JumpIf( ( b3[ w[ 0x8007bcf8 ] + 0x0011 ] >= 0x00000004 ) == false )To( 0x05e4 ); // 05 ca 11 7d 04 00 1b 7f 02 19 00
0x05cb    [ w[ 0x8007bcf8 ] + 0x001a ] = b3( ( ( b3[ w[ 0x8007bcf8 ] + 0x000b ] >> ( 0x00000006 * ( 0x00000004 - b3[ w[ 0x8007bcf8 ] + 0x0011 ] ) ) ) & 0x0000003f ) ); // 05 ca 1a ca 0b ca 11 7d 04 00 15 7d 06 00 11 17 7d 3f 00 24 2c 7f
0x05e1    JumpTo( 0x05f6 ); // 01 12 00
0x05e4    [ w[ 0x8007bcf8 ] + 0x001a ] = b3( ( ( b3[ w[ 0x8007bcf8 ] + 0x0008 ] >> ( 0x00000006 * b3[ w[ 0x8007bcf8 ] + 0x0011 ] ) ) & 0x0000003f ) ); // 05 ca 1a ca 08 ca 11 7d 06 00 11 17 7d 3f 00 24 2c 7f
0x05f6    [ w[ 0x8007bcf8 ] + 0x0017 ] = b3( CountActiveBits( GetUnknown00Mask() ) ); // 05 ca 17 79 00 2a 2c 7f
0x05fe    [ w[ 0x8007bcf8 ] + 0x001d ] = b3( GetUnitParameter( mask = GetUnknown01Mask(), parameter = Unimplemented 0x18 with type 0x26 load. ) ); // 05 ca 1d 79 01 29 26 2b 2c 7f
0x0608    JumpIf( ( b3[ w[ 0x8007bcf8 ] + 0x0017 ] && ( b3[ w[ 0x8007bcf8 ] + 0x001a ] <= b3[ w[ 0x8007bcf8 ] + 0x001d ] ) ) == false )To( 0x0618 ); // 05 ca 17 ca 1a ca 1d 1a 27 7f 02 03 00
0x0615    JumpTo( 0x0664 ); // 01 4c 00
0x0618    JumpIf( ( b[ w[ 0x8007bcf8 ] + 0x0016 ] <= 0x00000000 ) == false )To( 0x0626 ); // 05 d2 16 7d 00 00 1a 7f 02 03 00
0x0623    JumpTo( 0x0664 ); // 01 3e 00
0x0626    [ w[ 0x8007bcf8 ] + 0x0011 ] = b3( ( b3[ w[ 0x8007bcf8 ] + 0x000e ] & 0x00000007 ) ); // 05 ca 11 ca 0e 7d 07 00 24 2c 7f
0x0631    [ w[ 0x8007bcf8 ] + 0x000e ] = b3( ( ( b3[ w[ 0x8007bcf8 ] + 0x000e ] >> 0x00000003 ) & 0x001fffff ) ); // 05 ca 0e ca 0e 7d 03 00 17 7e ff ff 1f 00 24 2c 7f
0x0642    ( b3[ w[ 0x8007bcf8 ] + 0x000e ] |= ( b3[ w[ 0x8007bcf8 ] + 0x0011 ] << ( 0x00000003 * ( 0x00000001 - bu[ w[ 0x8007bcf8 ] + 0x0015 ] ) ) ) ); // 05 ca 0e ca 11 d6 15 7d 01 00 15 7d 03 00 11 16 3f 7f
0x0654    ( b[ w[ 0x8007bcf8 ] + 0x0016 ]-- ); // 05 d2 16 05 7f
0x0659    JumpIf( ( b[ w[ 0x8007bcf8 ] + 0x0016 ] >= 0x00000000 ) == true )To( 0x054e ); // 05 d2 16 7d 00 00 1b 7f 03 ea fe
0x0664    JumpIf( ( b3[ w[ 0x8007bcf8 ] + 0x0011 ] >= 0x00000004 ) == false )To( 0x0688 ); // 05 ca 11 7d 04 00 1b 7f 02 19 00
0x066f    [ w[ 0x8007bcf8 ] + 0x0014 ] = b( ( ( b3[ w[ 0x8007bcf8 ] + 0x0005 ] >> ( 0x00000006 * ( 0x00000004 - b3[ w[ 0x8007bcf8 ] + 0x0011 ] ) ) ) & 0x0000003f ) ); // 05 d6 14 ca 05 ca 11 7d 04 00 15 7d 06 00 11 17 7d 3f 00 24 2c 7f
0x0685    JumpTo( 0x069a ); // 01 12 00
0x0688    [ w[ 0x8007bcf8 ] + 0x0014 ] = b( ( ( b3[ w[ 0x8007bcf8 ] + 0x0002 ] >> ( 0x00000006 * b3[ w[ 0x8007bcf8 ] + 0x0011 ] ) ) & 0x0000003f ) ); // 05 d6 14 ca 02 ca 11 7d 06 00 11 17 7d 3f 00 24 2c 7f
0x069a    MISSING OPCODE 0x38




ENTITY: entity_id = 0x02
SCRIPT: script_id = 0x00
0x06ae    Return(); // 04

SCRIPT: script_id = 0x01
0x06af    JumpIf( ( bu[ w[ 0x8007bcf8 ] + 0x0001 ] == false ) == false )To( 0x06f6 ); // 05 d6 01 0e 7f 02 3f 00
0x06b7    [ w[ 0x8007bcf8 ] + 0x0001 ] = b( 0x00000001 ); // 05 d6 01 7d 01 00 2c 7f
0x06bf    JumpTo( 0x06cc ); // 01 0a 00
0x06c2    Wait( 0x01 ); // 22 00 01
0x06c5    [ 0x8007aef0 + 0x00ce ] = b( GetRandomByte() ); // 05 d4 ce 7a 00 2c 7f
0x06cc    JumpIf( ( ( Unimplemented type 0x28 for stack opcode 0x7a. & 0x00000008 ) == false ) == true )To( 0x06c2 ); // 05 7a 28 7d 08 00 24 0e 7f 03 ea ff
0x06d8    StoreUnitsParamsByMask( mask = GetUnknown01Mask(), parameter = Unimplemented 0x18 with type 0x35 load., value = 0x00000001 ); // 05 79 01 29 35 7d 01 00 2d 7f
0x06e2    StoreUnitsParamsByMask( mask = GetUnknown01Mask(), parameter = Unimplemented 0x18 with type 0x34 load., value = 0x00000000 ); // 05 79 01 29 34 7d 00 00 2d 7f
0x06ec    StoreUnitsParamsByMask( mask = GetUnknown01Mask(), parameter = Unimplemented 0x18 with type 0x36 load., value = 0x00000000 ); // 05 79 01 29 36 7d 00 00 2d 7f
0x06f6    JumpIf( bu[ script + 0x0019 ] == false )To( 0x0729 ); // 05 d5 19 7f 02 2c 00
0x06fd    [ script + 0x0019 ] = b( 0x00000000 ); // 05 d5 19 7d 00 00 2c 7f
0x0705    CountActiveBits( [ masks + 0x00 ] = h( GetUnknown01Mask() ) ); // 05 79 00 79 01 2c 2a 7f
0x070d    MISSING OPCODE 0xe5

SCRIPT: script_id = 0x05
0x072f    CountActiveBits( [ masks + 0x00 ] = h( GetUnknown01Mask() ) ); // 05 79 00 79 01 2c 2a 7f
0x0737    MISSING OPCODE 0x38




ENTITY: entity_id = 0x03
SCRIPT: script_id = 0x00
0x074a    Return(); // 04

SCRIPT: script_id = 0x01
0x074b    JumpIf( ( bu[ w[ 0x8007bcf8 ] + 0x0001 ] == false ) == false )To( 0x0792 ); // 05 d6 01 0e 7f 02 3f 00
0x0753    [ w[ 0x8007bcf8 ] + 0x0001 ] = b( 0x00000001 ); // 05 d6 01 7d 01 00 2c 7f
0x075b    JumpTo( 0x0768 ); // 01 0a 00
0x075e    Wait( 0x01 ); // 22 00 01
0x0761    [ 0x8007aef0 + 0x00ce ] = b( GetRandomByte() ); // 05 d4 ce 7a 00 2c 7f
0x0768    JumpIf( ( ( Unimplemented type 0x28 for stack opcode 0x7a. & 0x00000008 ) == false ) == true )To( 0x075e ); // 05 7a 28 7d 08 00 24 0e 7f 03 ea ff
0x0774    StoreUnitsParamsByMask( mask = GetUnknown01Mask(), parameter = Unimplemented 0x18 with type 0x35 load., value = 0x00000001 ); // 05 79 01 29 35 7d 01 00 2d 7f
0x077e    StoreUnitsParamsByMask( mask = GetUnknown01Mask(), parameter = Unimplemented 0x18 with type 0x34 load., value = 0x00000000 ); // 05 79 01 29 34 7d 00 00 2d 7f
0x0788    StoreUnitsParamsByMask( mask = GetUnknown01Mask(), parameter = Unimplemented 0x18 with type 0x36 load., value = 0x00000000 ); // 05 79 01 29 36 7d 00 00 2d 7f
0x0792    JumpIf( bu[ script + 0x001a ] == false )To( 0x07c5 ); // 05 d5 1a 7f 02 2c 00
0x0799    [ script + 0x001a ] = b( 0x00000000 ); // 05 d5 1a 7d 00 00 2c 7f
0x07a1    CountActiveBits( [ masks + 0x00 ] = h( GetUnknown01Mask() ) ); // 05 79 00 79 01 2c 2a 7f
0x07a9    MISSING OPCODE 0xe5

SCRIPT: script_id = 0x05
0x07cb    CountActiveBits( [ masks + 0x00 ] = h( GetUnknown01Mask() ) ); // 05 79 00 79 01 2c 2a 7f
0x07d3    MISSING OPCODE 0x38




ENTITY: entity_id = 0x04
SCRIPT: script_id = 0x00
0x07de    Return(); // 04




ENTITY: entity_id = 0x05
SCRIPT: script_id = 0x00
0x07e6    Return(); // 04




ENTITY: entity_id = 0x06
SCRIPT: script_id = 0x00
0x07ee    Return(); // 04




ENTITY: entity_id = 0x07
SCRIPT: script_id = 0x00
0x07f6    Return(); // 04




ENTITY: entity_id = 0x0a
SCRIPT: script_id = 0x00
0x07fe    Return(); // 04




