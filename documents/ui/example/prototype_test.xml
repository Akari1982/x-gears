типы объектов:
1. Статичный спрайт - ОК
	- рисуется в указанном месте

2. Покадровая анимация - OK
	- проигрывается по событию
	- проигрывается постоянно
	- фэйд кадров (плавное проявление следующего и исчезновение предыдущего кадра)

3. Набор покадровых анимаций - OK
	- проигрывает одну из анимаций
		- случайно
		- последовательно
		- с указанной вероятностью
	- проиграть указанную анимацию

4. Анимация по ключивым кадрам
	- качание вершин спрайта
	- смещение UV (прокрутка текстуры)
	- изменение поворота, перемещения, масштабирования
	
5. Система частиц
	- x, y, rot, scale, alpha, uv, 
	
6. Текст на экране - ОК
	- пишет текст по имени строки в таблице строк и имени стиля
	
7. Числовой индикатор - ОК
	- может выводить указанно значение в определенном месте
	- имеет различные типы выравнивания (слева, справа, по центру)
	
8. Группа объектов - ОК
	- не имеет доп-функциональности,
	- просто объединяет объекты в иерархию
	
10. Объект, расставляемый на экране карты
	- Могут реагировать на события
		- щелчек мышки (mouse key press)
		- провели мышкой над ним (mouse over)
		- типы команд:
			- изменение параметра дочернего объекта
			- старт / остановка дочерней анимации
	- Имеют в своем составе иерархию анимаций и спрайтов

<!-- 
	Идеология:
	1. Для каждого типа действий в коде существует класс, реализующий определенную функциональность. 
	2. Описание прототипа класса находится в отдельном файле. Относительный путь до файла - это имя прототипа.
	3. Каждому классу соответствует строка типа, которая его определяет (type):
		<object name = "garden animation" type = "frame_animation" prototype = "file path"... 
		- объект с именем "garden animation" класса "frame_animation"(покадравая анимация), описание которого находится в файле "file path".
	4. Имя базового тега файла прототипа должно совпадать с типом класса, который реализует данный прототип. 
		Пример: классу "Покадровой анимации" соответствует строка типа type = "frame_animation", то 
		базовый тег файла прототипа должен называться <frame_animation>! Невыполнение данного пункта ведет к ошибке выполнения!
	
	5. Любой класс может иметь какие то параметры, которые задаются в прототипе в поле <params...> и могут переопределены
		в описании объекта. 
		<object ... rot = "0.0" scaleX = "1.0" scaleY = "1.0" x = "100" y = "100" hsX = "0" hsY = "0" color = "0xff000000" take_impulse = "1">
		
		- для данного объекта переопределяются значения параметров rot, scale, x, y

	6. Объекты могут находиться в иерархии. Дочерние объекты наследуют трансформацию предков (rot, scale, x, y).
	7. Объекты, описанные в прототипе находятся не в иерархии, а в составе объекта.
	8. В составе объекта может быть определена вложенная иерархия объектов, которая создается внутри данного объекта.
		Объекты вложенной иерархии должны иметь один рутовый элемент. К данным объектом можно быдет обращаться по имени, но
		они будут не видны из базовой иерархии объектов.
-->


<!--
	Состояние объекта:
	Описывается в разделе behaviors, и определяет набор разных состояний и действий, которые нужно совершить, при переходе в него.
	Единовременно у объекта может быть одно состояние.
-->

<!--
		Скины объекта:
		
		Объект может содержать разные скины, как наботы внутренних иерархий объектов. В зависимости от того, 
		какой у объекта скин, может различаться его дочерние объекты.
		
		Важно, чтобы объект, которому может быть послана команда присутствовал во всех скинах.
		Фоновые объекты, которым не посылаются команды могут быть разными в разных скинах.
		
		<skins>
			<skin name = "skin1" >
				<object name = "hierarchy" type = "objects">

				</object>
			</skin>
		</skins>
	
		Команды:
		SetSkin, param = "skinName" - устанавливает текущий скин
-->

<!--
	Объектная анимация (oanim):
	
		1. Объектная анимация предназначена для анимирования параметров объекта ( position, scale, rotation ).
		2. Объект не может сам себя анимировать. Анимационный объект должен находиться вне анимируемого объекта.
		3. Анимация проводится относительно трансформации анимационного объекта (object_anim). Начальные параметры анимируемого объекта теряются.

	Функции объекта, для управления текущей анимацией:
		
		StartAnimation - продолжить анимацию после паузы
		RestartAnimation - начать анимацию сначала
		StopAnimation		- остановить анимацию
		PauseAnimation 	- преостановить анимацию
-->

<!--
	События объекта:
	Каждый объект может реагировать на системные события (клик мышки...)
	Для каждого поведения (behavior) определены реакции на события, на уровне команд
-->

<!--
	Работа с командами:
	1. Команды выполняются последовательно
	2. Если команда содержит вложения, то данные внутри команды считаются блоком
	3. блок команд имеет два параметра 
		loop - повторить выполнение
		shuffle - выполнять вразброс
		loop = "0" shuffle = "1" - выполнение одной из команд
	4. frecuency - частота выполнения команды. Параметр команды,  находящейся в блоке (имеет смысл его задавать, 
		когда блок имеет аттрибуты loop = "1" shuffle = "1").
	5. time - время, через которое сработает команда. Пока не пройдет это время и не выполнится команда, она будет
		считаться текущей. (time = "0.0" - по умолчанию)
	6. instant = "1" - выполнить команды блока немедленно (по умолчанию 0, т.е. выполняется последовательно)
		если instant = "1", то loop и shuffle = 0.
	7. count - количество раз, которые должна выполнится команда, прежде чем выполнение перейдет дальше

	8. object - объект, которому посылается команда 
		object = "this" - послать команду себе (по умолчанию)
		object = "parent" - послать команду предку
		object = "root" - послать команду на верхний уровень иерархии
		global
		global.ValueStorage
		screen
		cursor
	9. command = "" - имя команды
	10. param = "" - параметры команды (паремтр param = "value" )
						(паремтр param = "value screen.object1 x" передаст в команду значение параметра x объекта screen.object1 )
			param = "value this x"
	11. значение по умолчанию можно не указывать
	
	Типы команд:	
	1. command = "set" param = "x = 10" - установить значение параметра x равным 10
								param = "x = screen.object1 y" - установить значение параметра x равным значению параметра y у объекта screen.object1.
	2. command = "setChildAll" param = "x = 10" - установить значение параметра x равным 10 всем чилдренам
	3. command = "Show" - показать объект
	4. command = "Hide" - скрыть объект ( невидимый, неактивный и не работающий )
	
	5. command = "BehaviorStart" param = "behavior_name 1" - перейти к новому состоянию
			0 - дождаться конца анимации и проиграть раздел 'stop', 
			1 - не дожидаясь конца анимации,  перейти к новому состоянию
			2 - не дожидаясь конца анимации, но выполнить раздел 'stop')
	6. command = "BehaviorStop" - начать выполнять команды из раздела Stop, поведения объекта
						BehaviorForceStop - остановить все команды текущего поведения
	7. специальные команды для данного объекта
	
	Пример:
	<do time = "0.0" object = "wheel_static" command = "set" param = "visible = 1" />
-->

<!--
	Ветвления:
	
	1. Оператор ветвления работает как едничная команда
	2. Может содержать до 2-х вложенных команд, первая из которых выполнится если условие истино, а вторая, если условие ложно 
		(другие команды будут игнорироваться)
	3. Если условие ложно и действие на else отсутствует, то нечего не будет выполнено.
	4. left - описывает значение слева (это может быть имя объекта или строковае значение ) от оператора
		leftParam - параметр, дополняющий левое значение
	5. operator - оператор, который будет применен к левому и правому значению, для определение истиности условия (будут сравниваться СТРОКИ)
	6. На месте оператора do для then/else так же может стоять оператор if, и получатся вложенные условия
	7. Оператор выполняется мгновенно, но будет ожидать конца выполнения дочерних команд
	8. Можно сравнивать не только параметры, но и имя состояния объекта
		<if left = "obj" leftParam = "behavior" operator = "equal" right = "Init">
	
	<if left = "object" leftParam = "x" operator = "equal" right = "5" rightParam = "" time = "2">
		<do/>	// then
		<do/>	// else
		
		// operators
			equal	==
			not_equal	!=
			more	>
			moreEqual >=
			less <
			lessEqual <=
			
		// param
			Параметр объекта, с которым можно сравнивать.
			- один из обычных параметров, допустимых в описании объекта
			- специальный параметр, уникальный для каждого типа объектов
			- если параметр указан, то lift / right - это имя объекта, иначе это значение
	</if>
	
	
	
	Примеры:
		<if left = "object1" leftParam = "x" operator = "equal" right = "5"> - это значит if( object1.x == 5 )
		<if left = "screen.counter01" leftParam = "IsFull" operator = "equal" right = "1"> - это значит if( screen.counter01.IsFull() == true )
-->


<!--
	Объект может генерить свои события:
		<do command = "Spawn" param = "OnButtonClick" />
	
	Можно подписываться на данные действия, и назначать команды на них:
		<object name = "button_start" type = "interactive_object" ...>
			<spawn name = "OnButtonClick">
				<do time = "0.0" object = "wheel_static" command = "set" param = "visible = 1" />
			</spawn>
		</object>
		
	
-->

<!--
	Глобальный объект, доступный из любого места
-->
<global>
	<!--
	Команды:
	"Exit" - выход из игры
	"PlayMusicComposition"	- запускает музыкальную композицию (param = "name 0" - указывает имя композиции, и наличие фэйда (по умолчанию фэйд есть) )
	"PlaySoundSample" 		- запустить звуковой эффект (param = "" - указывает имя звука )
	"LoadAllSounds" 				- загрузить все игровые звуки
	"PrintLog"						- напечатать сообщение в лог


	Работа с опциями:
	"SetWindowedMode"			- установка/снятие полноэкранного режима (param = "1" - полноэкранный режим, param = "0" - оконный режим)
	"SetSoundVolume"			- устанавливает громкость звуков (0..1)
	"SetMusicVolume"				- устанавливает громкость музыки (0..1)


	Работа с профилем:
	"AddIncrementResource" - добавить ресурса, который добывается в матч3 после каждого раунда 
										- param = "1 200" - номер ресурса (1 от 1 до 3), количество ресурса(200)
	"AddResource"				- добавить ресурса
										- param = "1 200" - номер ресурса (1 от 1 до 3), количество ресурса(200)
										- param = "1 object.name value" - номер ресурса (1), количество ресурса(имя объекта.параметр)
	"AddBonusScale"			- добавить скорость увеличения бонуса
										- param = "1 0.2" - номер бонуса (1 от 1 до 3), увеличение скорости(0.2)
	"AddBonusScore"			- добавить к заполнению бонуса (100% заполнения - это заполнен 1-й уровень бонуса. 200% - заполнен 2-й уровень)
										- param = "1 0.2" - номер бонуса (1 от 1 до 3), добавить (0.2) - 20% от половины круга.

	Игровые функции:
	"ApplyBonus"				- выполнить определенный бонус ( param = "x y", x - тип бонуса (0 - 2), y - уровень бонуса( 1 - 3 ) )


	Переменные:
	
	LastBuildCreating 		- 1, значит какое то здание строется, 0 - значит не строется
	
	Переменные для city_view и city_design:
		BuildingBuy 		- индекс здания для покупки
		BuildingBuyType	- тип здания для покупки (1, 2, 3)
		BuildingSelect 		- индекс здания для показа данных		

		BuildingTitle		- название строения
		BuildingDesc		- описание строения
		BuildingMoney, BuildingGoods, BuildingFood - цена текущего строения

		BuildingGetResInd 	- бонус здания
		BuildingGetLabelInd	- подпись под бонусом здания
		
		BuildingCanBuy		- (0/1) - достаточно ли всех ресурсов для покупки здания
		BuildingCanChange	- (0/1) - достаточно ли всех ресурсов для смены здания
		BuildingMoneyOk		- (0/1) - достаточно ли денег для покупки
		BuildingGoodsOk		- (0/1) - достаточно ли товаров для покупки
		BuildingFoodOk		- (0/1) - достаточно ли еды для покупки
		
		BuildingTierIndex		- индекс нового таера

	Переменные для match3_debrifing:
		"Match3Money", "Match3Goods", "Match3Food"	- заработано денег
		"Match3PlayerTime", "Match3LastTime" 			- потрачено/ осталось времени
		"Match3BonusTime", "Match3MinResource"		- денег за время 
	-->
</global>

<cursor>
	<!--
	-->
</cursor>


<!--
	Работа с данными профиля
	-->
<profile_object>
	<params
		name = "default name"

		<!-- параметры для запроса-->
		need_to_create_new_profile							<!--1, если нужно запрашивать имя пользователя, 0 - если профиль существует-->
		can_add_new_profile									<!--1, если можно добавить профиль, 0 - если новый профиль создать нельзя-->
		
		fullscreen			= "0"									<!--текущий режим экрана-->
		music_volume	= "0"									<!--текущая громкость музыки-->
		sound_volume	= "0"									<!--текущая громкость звука-->

		last_level_index 			= "1"						<!--вернет номер уроня (начиная с 1-цы)-->
		can_continue_last_level 	= "1"						<!--вернет 1, если предыдущий уровень не был закончен-->

		ach_00 - 14		= "0"									<!--данные по трофеям-->
		char_00 - 10		= "0"									<!--данные по человечкам-->
		qst_00 - 10		= "0"									<!--данные по заданиям-->		

		building_00 - 49 = "0,1,2,3"								<!--текущий тип строения-->

		show_match3_hint_tutorial							<!--показывать или нет туториал (всплывающие подсказки в match3)-->
		show_tutorial											<!--показывать или нет туториал-->
		city_tutorial_level										<!--позиция туториала в городе-->
		match3_tutorial_level									<!--позиция туториала в match3-->
		match3_tutorial_00 - 10								<!--данные по туториалу в match3-->

		curr_money, curr_goods, curr_food					<!--текущее количество ресурсов-->
		curr_level												<!--номер текущего уровня-->
		curr_scores												<!--текущее количество очков-->


		bonus_01_level											<!--текущий уровень первого бонуса (нумерация начинается с 0)-->
		bonus_01_open_level									<!--открытый уровень первого бонуса (нумерация начинается с 0)-->
		bonus_01_score_01									<!--уровень заполнения 1-го уровня 1-го бонуса-->
		bonus_01_score_02									<!--уровень заполнения 2-го уровня 1-го бонуса-->
		bonus_02_level,		bonus_02_open_level,		bonus_02_score_01,		bonus_02_score_02
		bonus_03_level,		bonus_03_open_level,		bonus_03_score_01,		bonus_03_score_02
	/>
	
	Команды:
		"CreateNewProfile" 	- создать новый профиль с именем, переданном в param = "new_name"
		"LoadProfile"			- загрузить профиль по имени, переданном в param = "index"
		"DeleteProfile"			- удалить профиль по имени, переданном в param = "index"
		"Save" - сохранить профиль в файл

		"QuestComplete" - квест выполнен (param = "номер выполненного квеста)
		"EraseLastLevelInfo" - удалить информацию о прошлом уровне, чтобы начать играть его сначала
	
</profile_object>


<!--
	Работа с данными конфигурации
	-->
<config_object>
	<params
		name = "default name"
		
		<!-- параметры для запроса-->
		show_splash		= "0"									<!--показывать или нет экран логотипа-->
	/>
	
</config_object>


<!--
	Базовое окно (должно регистрироваться в файле screens.iof, если потребуется обращение к ниму извне)
-->
<screen_manager>
	Команды:
		"LoadScreen" 	- загрузить окно
		"ShowScreen" 	- показать окно
		"HideScreen"	- скрыть окно
		
</screen_manager>


<!--
	Базовое окно (должно регистрироваться в файле screens.iof, если потребуется обращение к ниму извне)
-->
<window>
	Команды:
		"StartScreen" - включить окно (param - числовой идентификатор, с которым вызывается окно) (это переведет окно в состояние "StartScreen")
		"EndScreen" - выключить показ окна (param - числовой идентификатор, который передается окну при вызове функции) (это переведет окно в состояние "StopScreen")
		"SetLock" - поставить флаг, что окно выполняется
	
	Поведения:
		"StartScreen" - вызывается при старте окна
		"StopScreen" - вызывается при остановке окна
</window>


<!--
	Эффект переключения между экранами
-->
<fade_screen>
	Команды:
		"SetFade" - param = "1" - включить фэйд экрана, 0 - выключить
</fade_screen>


<!--
	Эффект переключения между экранами
-->
<match3_field_screen>
	События:
		"OnMoneyUpdate" 		- возникает при изменение денег
		"OnGameComplete" 	- возникает при конце уровня
	
	Команды:
		"RestartLevel"			- перезапустить текущий уровень
</match3_field_screen>


<city_screen>
	Команды:
		"CreateBuilding" 		- создать/пересоздать здание данного типа
		"UpdateDesignInfo" 	- установить текущей информацию об определенном здании ( param = "id" - индекс здания)
</city_screen>


<!--
	Счетчик
-->
<counter>
	<params
		name = "default name"
		value			= "0"									<!--текущее значение счетчика-->
		final_value	= "10"									<!--Состояние счетчика, при котором он будет считаться заполненным-->
	/>
	
	<!--
		Команды:
			"Increment" 	- увеличить значение счетчика
			"Decrement"	- уменьшить значение счетчика
			"ToZero"			- обнулить счетчик
			"ToFull"			- заполнить счетчик
			
		События:
			"OnChange"			- происходить при смене счетчика
			"OnIncrement"		- происходит при повышение счетчика
			"OnDecrement"	- происходит при понижение счетчика
			"OnMaxValue"		- происходит при достижении максимального значения
			"OnMinValue"		- происходит при достижении нуля
			
		Запросы:
			"IsFull"				- вернет "1", если полностью заполнен и "0", если пуст
	-->
</counter>


<!--
	Таймер
-->
<timer>
	<params
		name = "default name"
		time			= "0"									<!--текущее значение времени-->
		max_time	= "10"									<!--Время срабатывания таймера-->
		loop			= "1"									<!--флаг показывает, что таймер срабатывает один раз или работает в цикле через max_time-->
	/>
	
	<!--
		Команды:
			"Start" 		- запустить таймер
			"Restart"	- перезапустить таймер
			"Stop"		- остановить таймер
			"Pause"		- преостановить время
			
		События:
			"OnTime"	- таймер сработал
	-->
</timer>


<!--
	Хранилище значений
-->
<value_storage>
	<params
		name = "default name"
	/>
	
	<!--
		Команды:
			"Set" 		- добавить/установить связку "ключ - значение" (param = "key value")
			
		Запросы:
			"key"			- если запросить параметр, указав ключ, то вернется значение, соответствующее этому ключу
	-->
</value_storage>




<!--
	Описание статичного спрайта.
	Данный прототип не существует, т.к. все параметры могут указываться непосредственно при создании объекта.
-->
<sprite>
	<params
		name = "default name"
		visible = "1"											<!--видим ли текст по умолчанию -->
		enable = "1"											<!--активен ли текст по умолчанию -->
		tex_name = "path to texture"						<!--имя текстуры -->
		sprite_name = "spr01" 								<!--имя спрайта в текстуре -->
		blend_mode = "0" 									<!--бленд фактор спрайта 
																			0 -(по умолчанию), 1 - затемнение, 2 - высветление, 3 - белая заливка
																	-->
		flipX = "0" flipY = "0"								<!--Отразить спрайт горизонтали / вертикали -->
		rot = "0.0" scaleX = "1.0" scaleY = "1.0" x = "100" y = "100"		<!--положение спрайта на экране относительно предыдущего в иерархии объекта-->
	/>
</sprite>


<!-- 
	Описание покадровой анимации.	
	Описание анимации хранится в отдельном файле и относительный путь до файла - это имя анимации.
-->
<frame_animation>
	<params
		name = "default name"							<!--имя объекта прототипа (некоторые объекты 
																	будут в единственном экземпляре и вполне могут использовать это поле 
																	для задания имени созданного объекта. Однако при создании объекта имя будет 
																	заменено, поэтому данное поле можно использовать только для 
																	идентификации дизайнером прототипа.-->
		visible = "1"											<!--видима ли анимация по умолчанию -->
		enable = "1"											<!--активна ли анимация по умолчанию -->
		animTime = "5.0"									<!--время проигрывания всей анимации -->
		loop = "1"												<!--циклична анимация или нет -->
		flipX = "0" flipY = "0"								<!--Отразить кадры анимации по горизонтали / вертикали -->
		slide_show = "0"									<!--если fade > 0, то показывать слайд шоу -->
		forward_anim = "1"									<!--направление анимации 1 - прямое (по умолчанию), 0 - обратное -->
		fade_time = "0.1"									<!-- описывает фэйд кадров анимации ( время перехода из одного кадра в другой должно быть меньше, чем время видимости кадра на экране (time < speed / frame_count))-->
		rot = "0.0" scaleX = "1.0" scaleY = "1.0" x = "100" y = "100"		<!--положение анимации на экране относительно предыдущего в иерархии объекта-->
	/>


	<!--
		count - количество кадров анимации
		texture - текстура анимации по умолчанию
		hotSpotX, hotSpotY - точка, относительно которой рисуется спрайт, используемая по умолчанию
	-->
	<frames count = "2" texture = "puzzle\\textures\\tex_test" hotSpotX = "10" hotSpotY = "10" >
			<!--
				hotSpotX, hotSpotY - точка, относительно которой рисуется спрайт
				texture - если текстура указана, то берется она, иначе берется текстура по умолчанию
				texture, hotSpotX, hotSpotY - если данные указать, то берутся они, иначе берется текстура по умолчанию
			-->
		<frame sprite = "frame_01" texture = "texture name" hotSpotX = "10" hotSpotY = "10" />
		<frame sprite = "frame_02" texture = "texture name" hotSpotX = "10" hotSpotY = "10" />
	</frames>	
	
	
	<commands>
		<do object = "frame animation" command = "Start" param = "2" /> 	<!--param = "2"- установить третий кадр анимации-->
		<do object = "frame animation" command = "Stop" /> 
		<do object = "frame animation" command = "SetFrame" param = "1" /> 	<!--param = "1"- установить кадр анимации-->
			
	</commands>
</frame_animation>



<!--
	Описание набора покадровых анимаций. Его можно интерпритировать как простую анимацию.
	Описание хранится в отдельном файле и относительный путь до файла - это имя анимации.
	
	-- не использовать!!!
-->
<frame_animation_block>
	<params
		name = "default name"							<!--имя объекта прототипа (некоторые объекты 
																	будут в единственном экземпляре и вполне могут использовать это поле 
																	для задания имени созданного объекта. Однако при создании объекта имя будет 
																	заменено, поэтому данное поле можно использовать только для 
																	идентификации дизайнером прототипа.-->
		visible = "1"											<!--видима ли анимация по умолчанию -->
		enable = "1"											<!--активна ли анимация по умолчанию -->
		playMode = "0"										<!--тип анимации 
																			0 - последовательно играются все анимации 
																			1 - играются в случайном порядке
																			2 - играются в зависимости от перемещения
																	-->
		flipX = "0" flipY = "0"								<!--Отразить кадры анимации по горизонтали / вертикали -->
		rot = "0.0" scaleX = "1.0" scaleY = "1.0" x = "100" y = "100" 	<!--положение анимации на экране относительно предыдущего в иерархии объекта-->
	/>

	<animations>
	<!-- 
		direction - определяет направление движения объекта, при котором играется данная анимация
		3	   2    1
		   \   |   /
		4	-  X  - 0
		   /   |   \
		5	   6    7
	-->
		<animation name = "animation 01" direction = "0" /> 
		<animation name = "animation 02" frequency = "2" />  <!-- frequency = 2 анимация проигрывается в 2 раза чаще других (по умолчанию 1)-->
	<animations>
	
	<object name = "hierarchy" type = "objects">
		<object name = "wheel_static" type = "sprite" sprite_name = "base" tex_name = "puzzle\textures\tex" rot = "0.0" scale = "1.0" x = "0" y = "0">
			<object name = "wheel_01" type = "frame_animation" prototype = "puzzle\animation\frame_anim"  scale = "2.0" x = "0" y = "100" />
			<object name = "wheel_02" type = "frame_animation" prototype = "puzzle\animation\frame_anim"  scale = "2.0" x = "100" y = "100" />
			<object name = "wheel_03" type = "frame_animation" prototype = "puzzle\animation\frame_anim"  scale = "2.0" x = "100" y = "100" />
		</object>
	</object>
	
</frame_animation_block>



<!--
	Описание анимированного спрайта
	
	Это СПРАЙТ, а значет все поля объекта sprite так же можно указывать
-->
<uv_animation_sprite>
	<params
		name = "default name"
		visible = "1"											<!--видим ли спрайт по умолчанию -->
		enable = "1"											<!--активен ли спрайт по умолчанию -->
		
		<!--данные анимации -->
		show_type = "1" 									<!--тип отображения спрайта 
																		0 - рисуется весь спрайт ( для прокрутки )
																		1 - с низу в верх
																		2 - с верху в низ
																		3 - с лева на право
																		4 - с права на лево
		anim_type = "2" 									<!--тип анимации 
																		0 - нет анимации (просто спрайт),
																		1 - прокрутка (облака),   show_type должен быть 0!!!!
																		2 - проявление, 
																		3 - выдвижение -->
		anim_time = "2.0"									<!--время анимаций проявления и выдвижения-->
		loop = "1"												<!--зацикленность-->
		rotateU = "10"										<!--смещение текстуры по горизонтали в пикселях за секунду-->
		rotateV = "10"										<!--смещение текстуры по вуртикали в пикселях за секунду-->
		start = "1"											<!--0 - нет анимации, 1 - анимация есть-->
		
		<!--поля объекта СПРАЙТ -->
		tex_name = "path to texture"						<!--имя текстуры -->
		sprite_name = "spr01" 								<!--имя спрайта в текстуре -->
		
		x = "100" y = "100" 									<!--положение спрайта на экране относительно предыдущего в иерархии объекта-->
	/>
	
	<!--
	Команды:
	"Start" - включает анимацию
	"Stop" - выключает анимацию
	-->
</uv_animation_sprite>


<!--
	Описание текста, который берет строку из таблицы строк и зарание созданный стиль.
	Данный прототип не существует, т.к. все параметры могут указываться непосредственно при создании объекта.
-->
<text>
	<params
		name = "default name"
		visible = "1"											<!--видим ли текст по умолчанию -->
		enable = "1"											<!--активен ли текст по умолчанию -->
		string = "string name"								<!--строка, из таблицы строк-->
		style = "style_name",								<!--стиль шрифта для данного текста-->
		x = "100" y = "100" 									<!--положение текста на экране относительно предыдущего в иерархии объекта-->
	/>
</text>



<!--
	Описание источника звуков
	
	при отрисовке дебага звуки подсвечиваются красным.
	типы (play_type):
	0. в случайное время
	1. при клике
	2. при наведение мышкой (возможна задержка)
	фэйда пока нет

	Принцип работы:
	1. те семплы, что по клику будут играться до конца ( это какие то мелкие звуки, типа шороха листвы, единичного звука и т.п.). 
		начинают играть сразу после клика
	2. звуки, которые играют при наведении играют с задержкой и fadeOut включается сразу после увода мышки с семплера.
-->
<sound_spot>
	<params
		name = "default name"
		enable = "1"										<!--активен ли звук по умолчанию -->
		sound_name = "sound name"						<!--имя звука-->
		play_type = "0",										<!--тип объекта 
																		0 - играет постоянно (looped), 
																		1 - играет по нажатию мышки, 
																		2 - играет когда мышка наведена,
																		3 - играет в случайное время-->
		radius = "10"											<!--радиус игры звука-->
		activate = "1"										<!--активироует игровой звук-->

		fade_in = "10"										<!--время начального фэйда в секундах-->
		fade_out = "10"										<!--время конечного фэйда в секундах-->	
		delay = "10"											<!--задержка звучания при наведении мышкой-->

		rand_time = "10"									<!--для случайной игры, указывает время, через которое нужно играть-->
		rand_delta = "10"									<!--для случайной игры, указывает флуктцацию величины времени-->

		x = "100" y = "100" 									<!--положение звука на экране относительно предыдущего в иерархии объекта-->
	/>
	
	<!--
	Команды:
	"Activate" - активирует звуковой источник
	"Deactivate" - деактивирует звук

	<do object = "sound" command = "Activate"/> - пример
	-->
</sound_spot>


<!--
	Эффект системы частиц.
-->
<effect>
	<params
		name = "default name"
		effect = "effect name"							<!--имя эффекта-->
		top_most = "1"										<!--рисовать эффект поверх экрана. 
																	Изменять этот параметр нельзя!!! при необходимости сменить его - использовать команду SetTopMost.
																-->
		
		rot = "1.0"											<!--вращение эффекта против ч.с. (в разианах)-->
		scaleX = "2" scaleY = "2"							<!--масштабирование эффекта-->
		x = "100" y = "100" 									<!--положение эффекта на экране относительно предыдущего в иерархии объекта-->
	/>

	<!--
	Команды:
	"Start" - запустить эффект (param = "1" - продолжить эффект после паузы)
	"Stop" - остановить эффект
	"StopImmediately" - остановить эффект немедленно
	"Pause" - преостановить эффект
	"SetTopMost" - показывать эффект поверх всего в окне (param = "1" - поверх всего, param = "0" - обычный вид)
	-->
</effect>


<!--
	Эффект покадровой анимации вершин
-->
<distortion_anim>
	<params
		name = "default name"
		effect = "effect name"							<!--имя эффекта-->
		time_scale = "1.0"									<!--масштабирование времени эффекта-->
		forward_anim = "1"									<!--направление анимации 1 - прямое (по умолчанию), 0 - обратное -->
		top_most = "1"										<!--рисовать эффект поверх экрана. 
																	Изменять этот параметр нельзя!!! при необходимости сменить его - использовать команду SetTopMost.
																-->
		x = "100" y = "100" 									<!--положение эффекта на экране относительно предыдущего в иерархии объекта-->
	/>

	<!--
	Команды:
		"Start" - запустить эффект или продолжить после паузы
		"Restart" - запустить эффект с начала или определенного места (param = "1" - время начала анимации)
		"Stop" - остановить эффект
		"Pause" - преостановить эффект
		"SetTime" - установить текущее время анимации (param = "1" - текущее время)
		"SetTopMost" - показывать эффект поверх всего в окне (param = "1" - поверх всего, param = "0" - обычный вид)
	-->
</distortion_anim>


<!--
	Эффект ключевой анимации объектов
	Объект обязан быть в корне основной иерархии объекта
-->
<object_anim>
	<params
		name = "default name"
		effect = "effect name"								<!--имя эффекта-->
		time_scale = "1.0"										<!--масштабирование времени эффекта-->
		forward_anim = "1"										<!--направление анимации 1 - прямое (по умолчанию), 0 - обратное -->
		x = "100" y = "100" 										<!--положение эффекта на экране относительно предыдущего в иерархии объекта-->
	/>

	<!--
	Команды:
		"Start" - запустить эффект (param = "object_name start end" - имя анимируемого объекта, такт начала анимации и такт конца анимации)
		"Restart" - перезапустить эффект с начала (param = "object_name start end" - имя анимируемого объекта, такт начала анимации и такт конца анимации)
		"Stop" - остановить эффект
		"Pause" - преостановить эффект
		
		"SetTime"	- установить текущее время анимации (param = "1" - текущее время)
		
		"ToStart"	- перейти к началу анимации, не начиная ее (param = "object_name" - имя анимируемого объекта)
		"ToEnd" 		- перейти к концу анимации, не начиная ее (param = "object_name" - имя анимируемого объекта)
	-->
</object_anim>


<!--
	Эффект смешанной - экранной и объектной анимации
	Объект обязан быть в корне основной иерархии объекта
-->
<multi_object_anim>
	<params
		name = "default name"
		effect = "effect name"							<!--имя эффекта-->
		time_scale = "1.0"									<!--масштабирование времени эффекта-->
		forward_anim = "1"									<!--направление анимации 1 - прямое (по умолчанию), 0 - обратное -->
		x = "100" y = "100" 									<!--положение эффекта на экране относительно предыдущего в иерархии объекта-->
	/>
	
	<!--
	Команды:
		"Start" - запустить эффект или продолжить после паузы (param = "OnStartAnim" - имя запускаемой анимации)
		"Restart" - запустить эффект с начала или определенного места (param = "1" - время начала анимации)
		"Stop" - остановить эффект
		"Pause" - преостановить эффект
		"SetTime" - установить текущее время анимации (param = "1" - текущее время 1 секунда, после начала анимации)
	-->
</multi_object_anim>



<!--
	Описание текста, который выдает на хкран строку, формируемую кодом.
	-- пока не необходим
-->
<format_text>
</format_text>


<!--
	Описание числового индикатора. Выводит числовое значение на экран, как строку используя картинку с цифрами.
	-- пока не необходим
-->
<number_frame_indicator>
</number_frame_indicator>


<!--
	Описание числового индикатора. Выводит числовое значение на экран, как строку использую указанный стиль шрифта.
	Описание хранится в отдельном файле и относительный путь до файла - это имя прототипа.
-->
<number_font_indicator>
	<params
		name = "default name"
		visible = "1"											<!--видим ли текст по умолчанию -->
		enable = "1"											<!--активен ли текст по умолчанию -->
		style = "style_name",								<!--стиль текста, которым выводится число-->
		percent = "1"											<!--выводить ли знак % после числа-->
		showSing = "1"										<!--выводить ли знак величины перед числом-->
		value = "100"										<!--значение, которое нужно выдать на экран-->
		as_time = "0"										<!--выводить число как время-->
		//alignX = "left" alignY = "top"						<!--тип выравнивания текста ( пока берется из стиля)
			x: 0 - left, 1 - center, 2 - right
			y: 0 - top, 1 - middle, 2 - buttom
		-->
		x = "100" y = "100" 									<!--положение текста на экране относительно предыдущего в иерархии объекта-->
	/>
	
	Команды:
	"SetValue"			- устанавливает новое значение индикатора
</number_font_indicator>



<!--
	Интерактивный объект: кнопка
-->
<button_entity>
	<params 
		name = "design_button_prot" 
		rect = "0 0 104 101"

		can_checked	= "0"						<!--0 - кнопка не может быть в зажатом состоянии, 1 - может -->
		checked			= "0"						<!--Текущее состояние кнопки. 1 - кнопка зажата -->
		idle_view 		= "idle"					<!--объект в иерархии, который показывает обычное представление кнопки -->
		selected_view 	= "over_mouse"			<!--объект в иерархии, который показывает выделенную кнопку -->
		pushed_view 	= "pressed"				<!--объект в иерархии, который показывает нажатую кнопку -->
		
		idle_checked_view 			= "idle"				<!--объект в иерархии, который показывает обычное состояние зажатой кнопки -->
		selected_checked_view 	= "over_mouse"
		pushed_checked_view		= "pressed"

		anim_filename 						= "anim_filename" 						<!--путь до мультиобъектной анимации, для кнопки-->
		idle_anim_name 					= "idle_anim_name"					<!--название idle анимации-->
		selected_anim_name 				= "selected_anim_name"				<!--название selected анимации-->
		pushed_anim_name 				= "pushed_anim_name"				<!--название pushed анимации-->
		
		idle_checked_anim_name 			= "idle_checked_anim_name"			<!--название idle_checked анимации-->
		selected_checked_anim_name 	= "selected_checked_anim_name"	<!--название selected_checked анимации-->
		pushed_checked_anim_name 	= "pushed_checked_anim_name"		<!--название pushed_checked анимации-->
	/>
	
	Spawn: "OnButtonClick" - при нажатии мышки
	Spawn: OnButtonPushed - при удержании кнопки
	
	Spawn: OnButtonSelected - при наведение на кнопку
	Spawn: OnButtonUnselect - при уходе с кнопки
	
	Spawn: "OnChecked" 		- при установке нажатого состояния
	Spawn: "OnUnchecked" 	- при снятии нажатого состояния
</button_entity>


<!--
	Интерактивный объект: поле, для ввода текста
-->
<edit_box_entity>
	<params 
		name = "design_button_prot" 
		rect = "0 0 104 101"

		max_symbol_limit	= "20"			<!--максимальное количество символов для ввода -->
		text_view 			= "edit_text"		<!--текстовое поле, для отображения введенного текста -->
		cursor_name			= "cursor"		<!--указывает имя объекта курсора -->
		
		<!--Параметры для получения-->
		not_empty								<!--1 - если строка поля ввода не пустая, 0 - если строка пустая-->
		text										<!--введенный текст-->
	/>

	Spawn: "OnEraseAll" 		- при удалении всех символов
	Spawn: "OnWriteSymbol" 	- при добавление первого символа
	Spawn: "OnEnter"		 	- при нажатии клавиши ввод
	
	Команды:
	"ClearText" 		- очистить поле ввода
	
</edit_box_entity>


<!--
	Интерактивный объект: список
-->
<list_box_entity>
	<params 
		name = "design_button_prot" 
		rect = "0 0 104 101"						<!--область для нажатия на один элемент списка-->

		spacing 				= "30"					<!--расстояние между строчками-->

		idle_item 				= "list_idle"			<!--текстовый объект, используемый для обычного элемента списка-->
		select_item			= "list_select"		<!--текстовый объект, используемый для выделенного элемента списка-->
		current_item			= "list_current"		<!--текстовый объект, используемый для выбранного элемента списка-->

		<!--Параметры для получения-->
		selected_item_index						<!--вернет индекс текущего выделенного элемента-->
		 /// selected_item								<!--вернет имя текущего выделенного элемента-->
		is_selected_item							<!--вернет 1, если какой то элемент выделен и 0, если не выделен никакой-->
		is_selected_current_item					<!--вернет 1, если выделен выбранный элемент-->
	/>
	
	Команды:
	"UpdateByProfileNames" - обновить список именами профилей
</list_box_entity>


<!--
	Интерактивный объект: индикатор заполнения
-->
<progress_bar_entity>
	<params 
		name = "design_button_prot" 
		rect = "0 0 104 101"

		value					= "0"				<!--текущее значение заполнения (0 - 1)-->
		progress_ind			= "name"			<!--имя эффекта прогресса-->
	/>
	
	

	Spawn: "OnChange" 		- при изменение величины
</progress_bar_entity>


<!--
	Описание группы объектовы. Не выполняет никакой функциональности, но организует объекты в группу
	Описание хранится в отдельном файле и относительный путь до файла - это имя прототипа.
-->
<objects>
	<params
		name = "default name"
		visible = "1"											<!--видим ли текст по умолчанию -->
		enable = "1"											<!--активен ли текст по умолчанию -->
		rot = "0.0" scaleX = "1.0" scaleY = "1.0" x = "100" y = "100"		<!--положение группы объектов на экране относительно предыдущего в иерархии объекта-->
	/>
	
	<object name = "hierarchy" type = "objects">
		<object name = "background" type = "sprite" sprite_name = "base" tex_name = "puzzle\textures\tex" rot = "0.0" scaleX = "1.0" scaleY = "1.0" x = "0" y = "0">
			<object name = "garden animation 01" type = "frame_animation" prototype = "puzzle\animation\frame_anim"  scaleX = "1.0" scaleY = "1.0" x = "0" y = "100" />
			<object name = "garden animation 02" type = "frame_animation" prototype = "puzzle\animation\frame_anim"  scaleX = "1.0" scaleY = "1.0" x = "100" y = "100" />
		</object>
	</object>
</objects>


<!--
	Пример описания интерактивного объекта.
	Описание хранится в отдельном файле и относительный путь до файла - это имя объекта.
-->
<interactive_object>
	<params 
		name = "default name"							<!--имя объекта прототипа (некоторые объекты 
																	будут в единственном экземпляре и вполне могут использовать это поле 
																	для задания имени созданного объекта. Однако при создании объекта имя будет 
																	заменено, поэтому данное поле можно использовать только для 
																	идентификации дизайнером прототипа.
																-->
		rot = "0" scaleX = "1.0" scaleY = "1.0" x = "100" y = "100" <!--положение анимации на экране относительно предыдущего в иерархии объекта-->
		rect = "0 0 103 82"									<!--область взаимодействия <<x, y, w, h>>
																	(относительно координат x, y, т.е. может быть rect = "-10 -10 20 20"
																-->
		non_interactive_rect = "0 0 103 82"				<!--область НЕ взаимодействия (которая пропускает импульс) -->
		take_impulse = "1"									<!--перехватывать или нет взаимодействие с пользователем (если 1, то другие объекты не получат событий мышки и клавиатуры)-->
		
		Параметры для запроса:
		behavior												<!--имя текущего состояния-->
	/>
	
	
	Spawn:
		OnLMouseDownNotTakeImpulse - при клике в область non_interactive_rect.
		OnLMouseUpNotTakeImpulse
		OnRMouseDownNotTakeImpulse
		OnRMouseUpNotTakeImpulse

	
	<!--
		Внутренняя иерархия объектов
	-->
	<object name = "hierarchy" type = "objects">
	</object>
	
	
	<!--
		Скины объекта
	-->
	<skins>
		<skins name = "skin1" >
			<object name = "obj1" type = "type" />
			<object name = "obj2" type = "type" />
		</skin>
		<skins name = "skin2" >
			<object name = "obj1" type = "type" />
			<object name = "obj2" type = "type" />
		</skin>
	</skins>
	
	
	<!--
		Состояния данного объекта
	-->
	<behaviors>
		<behavior name = "Create">
			<!--
				Как работает:
				1. есть скрипт выполняемых команд
				2. есть решатель, который определяет, какая команда выполняется следующей
				3. если скрипт достиг конца, то выполняется блок <stop>
				4. если получена команда парехода в другое состояние (behavior), то выполнение скрипта прерывается, 
					доигрывает последняя анимация, а затем происходит выполнение команд из списка <start> нового состояния
			-->
			<start>
				<do object = "background" command = "Set" param = "visible = 0" />
				<do loop = "0" shuffle = "0" instant = "1">
					<do object = "wheel_start" command = "Start" frequency = "1" >
						
					</do>
					<do object = "wheel_cycle" command = "Start" frequency = "1" />
					<do object = "wheel_stop" command = "Start" frequency = "1" />
					<do time = "0.1" object = "wheel_stop" command = "Start" frequency = "1" />
				</do>

				<do object = "watermill_create" command = "Start" >
					<do time = "0.0" command = "AddAction" param = "watermill_create" >
				</do>
				
				// if
				<if left = "screen.counter01" leftParam = "isFull" operator = "equal" right = "my name" >
					<do/>	// then
				</if>
				
				// if else if else..
				<if left = "object" leftParam = "value" operator = "equal" right = "5" >
					<do/>	// then
					<if left = "object" leftParam = "value" operator = "equal" right = "5" > // else
					</if>
				</if>
			</start>


			<!--	Выполняется при достижении конца очереди действий данного состояния	-->
			<stop>
				<do command = "behavior" param = "Iddle" />
			</stop>


			<!--	События, на которые реагирует объект в данном состоянии	-->
			<events>
				<event name = "OnLMouseDown">
                    	<do command = "behavior" param = "Idle" />
                        <do command = "event" param = "OnLMouseUp" />
                	</event>
				<event name = "OnLMouseUp" />
				<event name = "OnRMouseDown"/>
				<event name = "OnRMouseUp" />
				<event name = "OnMouseOver" />
				
				<event name = "OnEnterDown" />
				<event name = "OnEscDown" />
				<event name = "OnSpaceDown" />
				
				<!--<event name = "OnMouseGainFocus" />
				<event name = "OnMouseLostFocus" />
				<event name = "OnKeyUp" param = "Enter"/>
				<event name = "OnKeyDown" param = "Esc"/>-->
			</events>

		</behavior>
		
		
		<!--	Прототип ветвления	-->
		<behavior name = "test">
			<start>
				<do object = "global" command = "if" param = "object.behavior == 'sdfsd' ">
					<do command = "BehaviorStart" param = "ship_arrive" time = "5">
					</do>
					
					<do>
						<do command = "BehaviorStart" param = "ship_arrive" time = "5"/>
					</do>
				</do>
				
				
				<do object = "global" command = "switch" param = "obj.counter">
					<do command = "BehaviorStart" param = "ship_arrive" time = "4">
					</do>					
					<do>
						<do command = "BehaviorStart" param = "ship_arrive" time = "5"/>
					</do>
					<do command = "BehaviorStart" param = "ship_arrive" time = "5"/>
					<do command = "BehaviorStart" param = "ship_arrive" time = "5"/>
					<do command = "BehaviorStart" param = "ship_arrive" time = "5"/>
				</do>
			</start>
		</behavior>
		
		
		...
	</behaviors>
</interactive_object>




<!--
	Пример описания интерактивного объекта.
	Описание хранится в отдельном файле и относительный путь до файла - это имя объекта.
-->
<house_big_01>
	<params 
		name = "default name"							<!--имя объекта прототипа (некоторые объекты 
																	будут в единственном экземпляре и вполне могут использовать это поле 
																	для задания имени созданного объекта. Однако при создании объекта имя будет 
																	заменено, поэтому данное поле можно использовать только для 
																	идентификации дизайнером прототипа.-->
		scaleX = "1.0" scaleY = "1.0" x = "100" y = "100" <!--положение анимации на экране относительно предыдущего в иерархии объекта-->
	/>
	
	<events>
		<event name = "OnBuild" >
			<do time = "0.0" object = "garden background" command = "set" param1 = "visible" value1 = "1"/>
			<do time = "0.0" object = "garden background" command = "display" param1 = "down-up" param2 = "time" value2 = "1.0"/>
			
			<do time = "1.0" object = "garden animation_02" command = "start" param1 = "path to some animation 02" />
			<do time = "1.0" object = "garden animation_02" command = "set" param1 = "loop" value1 = "0" />
		</event>
		
		<event name = "OnBreak" >
		</event>
		
		<event name = "OnMouseDown" >
			<do time = "0.0" object = "garden animation_02" command = "start" param1 = "path to some animation 02" />
			<do time = "0.0" object = "garden animation_02" command = "set" param1 = "loop" value1 = "1" />
			
			<do time = "0.0" object = "garden animation" command = "start"/>
			<do time = "0.0" object = "garden animation" command = "set" param1 = "loop" value1 = "inverse" />
		</event>
		
		<event name = "OnMouseUP" >
			<do destObject = "garden animation_02" command = "set" param1 = "loop" value1 = "0" />
		<event/>
		
		<event name = "OnMouseOver" />
	</events>
	
	<objects>
		<object name = "background" type = "sprite" sprite_name = "spr01" visible = "0" tex_name = "path to texture" rot = "0.0" scaleX = "1.0" scaleY = "1.0" x = "100" y = "100"/>
		<object name = "garden animation" type = "frame_animation" visible = "0" rot = "0.0" scaleX = "1.0" scaleY = "1.0" x = "100" y = "100" loop = "1" />
		<object name = "garden animation_02" type = "frame_animation_block" visible = "0" rot = "0.0" scaleX = "1.0" scaleY = "1.0" x = "200" y = "200" loop = "0" />
	</objects>
</house_big_02>



/// создание объекта конкретного типа
<object name = "garden animation" type = "frame_animation" prototype = "file path" rot = "0.0" scaleX = "1.0" scaleY = "1.0" x = "100" y = "100">
	<object name = "garden animation 02" type = "frame_animation_block" prototype = "file path" rot = "0.0" scaleX = "1.0" scaleY = "1.0" x = "100" y = "100"/>
</object>
<object name = "garden animation 02" type = "frame_animation_block" prototype = "file path" rot = "0.0" scaleX = "1.0" scaleY = "1.0" x = "100" y = "100"/>
<object name = "some sprite" type = "sprite" sprite_name = "spr01" tex_name = "path to texture" rot = "0.0" scaleX = "1.0" scaleY = "1.0" x = "100" y = "100"/>

<object name = "some text" type = "text" style = "style_name" string = "string name" x = "100" y = "100">
	<object name = "some text" type = "text" style = "style_name" string = "string name" x = "100" y = "100"/>
</object>