ToDoList



v0.01
! FFVII first mission.
! Demo game.



4th alpha
! Field Editor:
    ! Add posibility to edit and save walkmesh.
    ! Add posibility to load walkmesh.
    ! Add posibility to edit field xml.

! Battle:
    ! Add base battle cycle.
    ! During loading models placed correctly.
    ! Add battle models with animations.
    ! Add free camera.

! Field:
    ! Think about point and click management (as additional).

    ! Add sounds and music.
    ! Video camera settings.
    ! Play video.

    ! Add default entity initialization (in lua).
    ! Movement/Run speed must be setable from lua for both PC and NPC.
    ! Reverse real initialized data for entity (solid range and so).
    ! Fix scale problem. Must be imported camera and walkmesh already scaled.

    ! Fix crush with str length when text formatter appear but still not parsed (colour)
    ! Add [item_name] tag to string parser.
    ! Make global and local strings. Unload and loading local strings.
    ! Implement counter window.
    ! Implement timer window.
    ! Images inserting.
    ! Fix tag parsing. (if half of tag went to render - it appears in output)
    ! Fix window ordering (musn't use _notifyZOrder?)

    ! Add party and party related functions.
        !true = game:character_is_in_party(character_id);
        !game:character_set_lock(character_id, true);
        !game:character_set_available(character_id, true);
        !true = game:character_is_available(character_id);

    ! Sync tile with walkmesh.
    ! Tile depth sorting.
    ! Tile scrolling.
    ! Tile animation.
    ! Tile loading.
    ! Reverse scrolling and tile animation.
    ! Triggers that change tiles.

    ! Change auto-move routine to waypoint instead of direct coordinates.
    ! Visualize auto move.
    ! Visualize climbing and jump.

    ! Fix standart and FFVII camera differences for sprites.
    ! Add standart sprite support like in Xenogears (animations).

    ! Walkmesh scrolling.

    ! Export model.
        ! Export models with textures.
    ! Reverse model and model animation.
        ! Reverse Field specific settings.
        ! Reverse KAWAI opcode.
        ! Reverse texture handling.

! System:
    ! Make data directory configurable to create a lot of games with one engine.

    ! Save/Load

    ! Add speed to camera movement.
    ! When switch camera - it must store it's position (CS_2_5D_GAME->CS_3D_FREE).

    ! Move script callbacks to separate functions in c++.
    ! Create update manager (to subscribe for it) (remove sending updates from frame listner directly).
    ! Create event manager (to subscribe for it) (remove sending events from console and frame listner directly).
    ! Add enable_inactive_update console comand.
    ! Make game pause on focus lose (sound, update and render).
    ! Log to console.
    ! Add posibility to execute script command from console.
    ! Log levels.

    ! Port to Ogre 1.6.x.

! Menu:
    ! Add start menu.
    ! Add menu module.
    ! Add start module.
    ! Party Menu.
    ! Save/Load menu



3rd alpha 2006-10-16
- Line draw off/on.
! Create fully playable STARTMAP, MD1STIN and MD1_1 as much as posible.

- battle_run must be waitable.
- Add game related things like money and items.
    -game:item_add(item_id, quantity);
    -quantity = game:item_get_quantity(item_id);

- Add rotate to movement input.
- Add bit operators to lua scripting.
- Move field debug to global config and to console.
- Fix console input.

- Add party and party related functions.
    -game:party_set_size(party_size);
    -game:character_add_to_party(character_id);
    -game:character_remove_from_party(character_id);
    -game:party_clear();
- Add variables gamestate storing and loading.

- Remove field debug info on start of battle.
- Battle module.
- New module management. Camera and scene node must be detached on module pause for field and map.
- Battle opcodes.
- Encounters check.
- Optimize Field loading from xml (it's better to load everything with one function call).

- Add fade and fade related opcodes.

- Waitable windows.
- Party and Characters Names inserting.
- Variable inserting.
- Coloring font.
- Pausing string output (OK and Wait).
- New window handling.
- Tags fo manipulate windows.
- Text scrolling on overflow.
- Read unicode text from lang files.
- Choice window.
- Transparent windows.
- Dialog window rendering.
- Reverse window management.

- Implement script auto-activation.
- Talking with other entity.
- Reverse script auto activation.
- Entity script management.
- Reverse script flow.
- Gateways (lines enough for that).
- Enabling/disabling lines.
- Line slipping.
- Line.

- Walkmesh ingame view (camera).
- Add base sprite support like in Xenogears (stand).

- Export model.
    - Add export of bcx models.
    - Fix that at the end of animation first frame shown.
    - Fix rotation during animation.



2nd alpha 2006-10-16
- Console.
- Font rendering.
- Debug entity stats like position, rotation, triangle.
- Debug walkmesh (draw triangle id's)
- Debug info must be drawn under console.
- Move exit and console button handling to input mapper.
- Pause in game motion (F11).
- OpenGL collision and direction debug draw fix.
- Focus after alt+tab.

- Add wait script opcode (in seconds).
- Fix rotating in map 2.
- Catch errors during load of lua file.
- Debug scripts states.
- Script map loading.

- Add lock/unlock PC input.
- Add lock/unlock triangle script command.

- Add correct animation.
- Add animation update to climb and jump.
- Remove rotate lock from move functions (it can be done through rotate_lock command).
- Remove direction setting from climb.
- Fix offset relative to direction.
- Add offset routine.
- Add move to entity.
- turn_to_model must take direction to model every step.
- Move action type to field instead of model cause we use instant/linear/smooth not only for model.
- Add model rendering.
- Reverse model and model animation.
    - Reverse animation opcodes.
    - Reverse geometry.
    - Reverse animation routine.
    - Reverse loading.

- Model auto-action to seconds instead of steps.



1st alpha 2006-10-16
- Game button handling.
- Input handling.

- XML loader rewrite to OGRE.

- Model movement.
- Walkmesh management (enebling/disabling).
- Walkmesh view.
- Walkmesh loading.
- Reverse entity movement/positioning.